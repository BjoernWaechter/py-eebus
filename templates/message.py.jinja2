from dataclasses import dataclass
{% for imp in imports %}{{ imp }}
{% endfor %}
from {{ folder }}.message_type import *
import json


def array_2_dict(arr):
    return {list(v.keys())[0]: v[list(v.keys())[0]] for v in arr}


def get_object_data(obj):
    return obj.get_data()

{%- set base_type = 'ShipMessage' if folder == 'ship' else 'SpineMessage' %}
{%- set base_type_type = 'ShipMessageType' if folder == 'ship' else 'SpineMessageType' %}


{% if folder == 'ship' %}
class Cmi({{ base_type }}):
    def __init__(
            self,
            data = None
    ):
        super().__init__()
        self._msg_type = MessageType.MSG_TYPE_INIT
        if data is None:
            data = b'\x00'
        self._msg = data

    @classmethod
    def from_data(cls, data):
        return cls(data[1:2])

    def get_msg_bytes(self):
        data_bytes = self._msg_type + self._msg
        return data_bytes
{% endif %}

{% for ele in elements %}
class {{ ele.base_name }}({{ base_type }}):
    def __init__(
            self,
{% for m in ele.members %}            {{ m.snake_case_name }}{% if m.data_type %}: {% if m.is_array %}list[{% endif %}{{ m.data_type }}{% if m.is_array %}]{% endif %}{% endif %}{% if m.default_value or m.is_optional %} = None{% endif %},
{% endfor %}    ):
        super().__init__()
        {% for m in ele.members -%}
        {% if m.default_value %}
        if {{ m.name | lower }} is None:
            {{ m.name }} = {{ m.default_value }}{% endif %}
        {%- endfor %}
        {% if folder == 'ship' %}self._msg_type = {{ ele.msg_type_numeric }}
        {% endif -%}
        self._root_tag = "{{ ele.msg_name }}"
        self._msg = {{ ele.data_type }}(
{% for m in ele.members %}            {{ m.snake_case_name }}={{ m.snake_case_name }},
{% endfor %}        )

    @classmethod
    def from_data(cls, data):
        {%- if ele.members | length > 0 %}
        data_dict = array_2_dict(data){% endif %}
        return cls({% for m in ele.members %}
            {{ m.snake_case_name }}={% if m.is_enum %}{{ m.data_type }}({% elif m.type_simple == False %}{{ m.data_type }}.from_data({% endif %}data_dict.get('{{ m.name }}'){% if m.data_type != "" %}{% if m.type_simple == False %}) if '{{ m.name }}' in data_dict else None{% endif %}{% endif %}, {% endfor %}
        )

{% endfor %}
ROOT_TAG_2_TYPE = {
{% for ele in elements %}    "{{ ele.msg_name }}": {{ ele.base_name }},
{% endfor %}}