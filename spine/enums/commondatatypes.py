from enum import Enum


class MessageType(bytes, Enum):
    MSG_TYPE_INIT = b'\x00'
    MSG_TYPE_CONTROL = b'\x01'
    MSG_TYPE_DATA = b'\x02'
    MSG_TYPE_END = b'\x03'


class FunctionEnumType(str, Enum):
    actuatorLevelData = 'actuatorLevelData'
    actuatorLevelDescriptionData = 'actuatorLevelDescriptionData'
    actuatorSwitchData = 'actuatorSwitchData'
    actuatorSwitchDescriptionData = 'actuatorSwitchDescriptionData'
    alarmListData = 'alarmListData'
    bindingManagementDeleteCall = 'bindingManagementDeleteCall'
    bindingManagementEntryListData = 'bindingManagementEntryListData'
    bindingManagementRequestCall = 'bindingManagementRequestCall'
    dataTunnelingCall = 'dataTunnelingCall'
    deviceClassificationManufacturerData = 'deviceClassificationManufacturerData'
    deviceClassificationUserData = 'deviceClassificationUserData'
    deviceDiagnosisHeartbeatData = 'deviceDiagnosisHeartbeatData'
    deviceDiagnosisServiceData = 'deviceDiagnosisServiceData'
    deviceDiagnosisStateData = 'deviceDiagnosisStateData'
    directControlActivityListData = 'directControlActivityListData'
    directControlDescriptionData = 'directControlDescriptionData'
    electricalConnectionDescriptionListData = 'electricalConnectionDescriptionListData'
    electricalConnectionParameterDescriptionListData = 'electricalConnectionParameterDescriptionListData'
    electricalConnectionStateListData = 'electricalConnectionStateListData'
    hvacOperationModeDescriptionListData = 'hvacOperationModeDescriptionListData'
    hvacOverrunDescriptionListData = 'hvacOverrunDescriptionListData'
    hvacOverrunListData = 'hvacOverrunListData'
    hvacSystemFunctionDescriptionListData = 'hvacSystemFunctionDescriptionListData'
    hvacSystemFunctionListData = 'hvacSystemFunctionListData'
    hvacSystemFunctionOperationModeRelationListData = 'hvacSystemFunctionOperationModeRelationListData'
    hvacSystemFunctionPowerSequenceRelationListData = 'hvacSystemFunctionPowerSequenceRelationListData'
    hvacSystemFunctionSetpointRelationListData = 'hvacSystemFunctionSetpointRelationListData'
    loadControlEventListData = 'loadControlEventListData'
    loadControlStateListData = 'loadControlStateListData'
    measurementConstraintsListData = 'measurementConstraintsListData'
    measurementDescriptionListData = 'measurementDescriptionListData'
    measurementListData = 'measurementListData'
    measurementThresholdRelationListData = 'measurementThresholdRelationListData'
    messagingListData = 'messagingListData'
    networkManagementAbortCall = 'networkManagementAbortCall'
    networkManagementAddNodeCall = 'networkManagementAddNodeCall'
    networkManagementDeviceDescriptionListData = 'networkManagementDeviceDescriptionListData'
    networkManagementDiscoverCall = 'networkManagementDiscoverCall'
    networkManagementEntityDescriptionListData = 'networkManagementEntityDescriptionListData'
    networkManagementFeatureDescriptionListData = 'networkManagementFeatureDescriptionListData'
    networkManagementJoiningModeData = 'networkManagementJoiningModeData'
    networkManagementModifyNodeCall = 'networkManagementModifyNodeCall'
    networkManagementProcessStateData = 'networkManagementProcessStateData'
    networkManagementRemoveNodeCall = 'networkManagementRemoveNodeCall'
    networkManagementReportCandidateData = 'networkManagementReportCandidateData'
    networkManagementScanNetworkCall = 'networkManagementScanNetworkCall'
    nodeManagementBindingData = 'nodeManagementBindingData'
    nodeManagementBindingDeleteCall = 'nodeManagementBindingDeleteCall'
    nodeManagementBindingRequestCall = 'nodeManagementBindingRequestCall'
    nodeManagementDestinationListData = 'nodeManagementDestinationListData'
    nodeManagementDetailedDiscoveryData = 'nodeManagementDetailedDiscoveryData'
    nodeManagementSubscriptionData = 'nodeManagementSubscriptionData'
    nodeManagementSubscriptionDeleteCall = 'nodeManagementSubscriptionDeleteCall'
    nodeManagementSubscriptionRequestCall = 'nodeManagementSubscriptionRequestCall'
    operatingConstraintsDurationListData = 'operatingConstraintsDurationListData'
    operatingConstraintsInterruptListData = 'operatingConstraintsInterruptListData'
    operatingConstraintsPowerDescriptionListData = 'operatingConstraintsPowerDescriptionListData'
    operatingConstraintsPowerLevelListData = 'operatingConstraintsPowerLevelListData'
    operatingConstraintsPowerRangeListData = 'operatingConstraintsPowerRangeListData'
    operatingConstraintsResumeImplicationListData = 'operatingConstraintsResumeImplicationListData'
    powerSequenceAlternativesRelationListData = 'powerSequenceAlternativesRelationListData'
    powerSequenceDescriptionListData = 'powerSequenceDescriptionListData'
    powerSequenceNodeScheduleInformationData = 'powerSequenceNodeScheduleInformationData'
    powerSequencePriceCalculationRequestCall = 'powerSequencePriceCalculationRequestCall'
    powerSequencePriceListData = 'powerSequencePriceListData'
    powerSequenceScheduleConfigurationRequestCall = 'powerSequenceScheduleConfigurationRequestCall'
    powerSequenceScheduleConstraintsListData = 'powerSequenceScheduleConstraintsListData'
    powerSequenceScheduleListData = 'powerSequenceScheduleListData'
    powerSequenceSchedulePreferenceListData = 'powerSequenceSchedulePreferenceListData'
    powerSequenceStateListData = 'powerSequenceStateListData'
    powerTimeSlotScheduleConstraintsListData = 'powerTimeSlotScheduleConstraintsListData'
    powerTimeSlotScheduleListData = 'powerTimeSlotScheduleListData'
    powerTimeSlotValueListData = 'powerTimeSlotValueListData'
    resultData = 'resultData'
    sensingDescriptionData = 'sensingDescriptionData'
    sensingListData = 'sensingListData'
    sessionIdentificationListData = 'sessionIdentificationListData'
    sessionMeasurementRelationListData = 'sessionMeasurementRelationListData'
    setpointConstraintsListData = 'setpointConstraintsListData'
    setpointDescriptionListData = 'setpointDescriptionListData'
    setpointListData = 'setpointListData'
    smartEnergyManagementPsConfigurationRequestCall = 'smartEnergyManagementPsConfigurationRequestCall'
    smartEnergyManagementPsData = 'smartEnergyManagementPsData'
    smartEnergyManagementPsPriceCalculationRequestCall = 'smartEnergyManagementPsPriceCalculationRequestCall'
    smartEnergyManagementPsPriceData = 'smartEnergyManagementPsPriceData'
    specificationVersionListData = 'specificationVersionListData'
    subscriptionManagementDeleteCall = 'subscriptionManagementDeleteCall'
    subscriptionManagementEntryListData = 'subscriptionManagementEntryListData'
    subscriptionManagementRequestCall = 'subscriptionManagementRequestCall'
    supplyConditionDescriptionListData = 'supplyConditionDescriptionListData'
    supplyConditionListData = 'supplyConditionListData'
    supplyConditionThresholdRelationListData = 'supplyConditionThresholdRelationListData'
    taskManagementJobDescriptionListData = 'taskManagementJobDescriptionListData'
    taskManagementJobListData = 'taskManagementJobListData'
    taskManagementJobRelationListData = 'taskManagementJobRelationListData'
    taskManagementOverviewData = 'taskManagementOverviewData'
    thresholdConstraintsListData = 'thresholdConstraintsListData'
    thresholdDescriptionListData = 'thresholdDescriptionListData'
    thresholdListData = 'thresholdListData'
    timeDistributorData = 'timeDistributorData'
    timeDistributorEnquiryCall = 'timeDistributorEnquiryCall'
    timeInformationData = 'timeInformationData'
    timePrecisionData = 'timePrecisionData'
    timeTableConstraintsListData = 'timeTableConstraintsListData'
    timeTableDescriptionListData = 'timeTableDescriptionListData'
    timeTableListData = 'timeTableListData'
    deviceConfigurationKeyValueConstraintsListData = 'deviceConfigurationKeyValueConstraintsListData'
    deviceConfigurationKeyValueListData = 'deviceConfigurationKeyValueListData'
    deviceConfigurationKeyValueDescriptionListData = 'deviceConfigurationKeyValueDescriptionListData'
    loadControlLimitConstraintsListData = 'loadControlLimitConstraintsListData'
    loadControlLimitDescriptionListData = 'loadControlLimitDescriptionListData'
    loadControlLimitListData = 'loadControlLimitListData'
    loadControlNodeData = 'loadControlNodeData'
    timeSeriesConstraintsListData = 'timeSeriesConstraintsListData'
    timeSeriesDescriptionListData = 'timeSeriesDescriptionListData'
    timeSeriesListData = 'timeSeriesListData'
    tariffOverallConstraintsData = 'tariffOverallConstraintsData'
    tariffListData = 'tariffListData'
    tariffBoundaryRelationListData = 'tariffBoundaryRelationListData'
    tariffTierRelationListData = 'tariffTierRelationListData'
    tariffDescriptionListData = 'tariffDescriptionListData'
    tierBoundaryListData = 'tierBoundaryListData'
    tierBoundaryDescriptionListData = 'tierBoundaryDescriptionListData'
    commodityListData = 'commodityListData'
    tierListData = 'tierListData'
    tierIncentiveRelationListData = 'tierIncentiveRelationListData'
    tierDescriptionListData = 'tierDescriptionListData'
    incentiveListData = 'incentiveListData'
    incentiveDescriptionListData = 'incentiveDescriptionListData'
    incentiveTableData = 'incentiveTableData'
    incentiveTableDescriptionData = 'incentiveTableDescriptionData'
    incentiveTableConstraintsData = 'incentiveTableConstraintsData'
    electricalConnectionPermittedValueSetListData = 'electricalConnectionPermittedValueSetListData'
    useCaseInformationListData = 'useCaseInformationListData'
    nodeManagementUseCaseData = 'nodeManagementUseCaseData'
    billConstraintsListData = 'billConstraintsListData'
    billDescriptionListData = 'billDescriptionListData'
    billListData = 'billListData'
    identificationListData = 'identificationListData'
    measurementSeriesListData = 'measurementSeriesListData'
    electricalConnectionCharacteristicListData = 'electricalConnectionCharacteristicListData'
    stateInformationListData = 'stateInformationListData'


class FeatureSmartEnergyManagementPsSpecificUsageEnumType(str, Enum):
    FixedForecast = 'FixedForecast'
    FlexibleChosenForecast = 'FlexibleChosenForecast'
    FlexibleOptionalForecast = 'FlexibleOptionalForecast'
    OptionalSequenceBasedImmediateControl = 'OptionalSequenceBasedImmediateControl'


class FeatureSetpointSpecificUsageEnumType(str, Enum):
    Contact = 'Contact'
    Electrical = 'Electrical'
    Heat = 'Heat'
    Level = 'Level'
    Pressure = 'Pressure'
    Temperature = 'Temperature'


class FeatureMeasurementSpecificUsageEnumType(str, Enum):
    Contact = 'Contact'
    Electrical = 'Electrical'
    Heat = 'Heat'
    Level = 'Level'
    Pressure = 'Pressure'
    Temperature = 'Temperature'


class FeatureHvacSpecificUsageEnumType(str, Enum):
    OperationMode = 'OperationMode'
    Overrun = 'Overrun'


class FeatureDirectControlSpecificUsageEnumType(str, Enum):
    History = 'History'
    RealTime = 'RealTime'


class FeatureTypeEnumType(str, Enum):
    ActuatorLevel = 'ActuatorLevel'
    ActuatorSwitch = 'ActuatorSwitch'
    Alarm = 'Alarm'
    DataTunneling = 'DataTunneling'
    DeviceClassification = 'DeviceClassification'
    DeviceDiagnosis = 'DeviceDiagnosis'
    DirectControl = 'DirectControl'
    ElectricalConnection = 'ElectricalConnection'
    Generic = 'Generic'
    HVAC = 'HVAC'
    LoadControl = 'LoadControl'
    Measurement = 'Measurement'
    Messaging = 'Messaging'
    NetworkManagement = 'NetworkManagement'
    NodeManagement = 'NodeManagement'
    OperatingConstraints = 'OperatingConstraints'
    PowerSequences = 'PowerSequences'
    Sensing = 'Sensing'
    Setpoint = 'Setpoint'
    SmartEnergyManagementPs = 'SmartEnergyManagementPs'
    TaskManagement = 'TaskManagement'
    Threshold = 'Threshold'
    TimeInformation = 'TimeInformation'
    TimeTable = 'TimeTable'
    DeviceConfiguration = 'DeviceConfiguration'
    SupplyCondition = 'SupplyCondition'
    TimeSeries = 'TimeSeries'
    TariffInformation = 'TariffInformation'
    IncentiveTable = 'IncentiveTable'
    Bill = 'Bill'
    Identification = 'Identification'
    StateInformation = 'StateInformation'


class EntityTypeEnumType(str, Enum):
    Battery = 'Battery'
    Compressor = 'Compressor'
    DeviceInformation = 'DeviceInformation'
    DHWCircuit = 'DHWCircuit'
    DHWStorage = 'DHWStorage'
    Dishwasher = 'Dishwasher'
    Dryer = 'Dryer'
    ElectricalImmersionHeater = 'ElectricalImmersionHeater'
    Fan = 'Fan'
    GasHeatingAppliance = 'GasHeatingAppliance'
    Generic = 'Generic'
    HeatingBufferStorage = 'HeatingBufferStorage'
    HeatingCircuit = 'HeatingCircuit'
    HeatingObject = 'HeatingObject'
    HeatingZone = 'HeatingZone'
    HeatPumpAppliance = 'HeatPumpAppliance'
    HeatSinkCircuit = 'HeatSinkCircuit'
    HeatSourceCircuit = 'HeatSourceCircuit'
    HeatSourceUnit = 'HeatSourceUnit'
    HVACController = 'HVACController'
    HVACRoom = 'HVACRoom'
    InstantDHWHeater = 'InstantDHWHeater'
    Inverter = 'Inverter'
    OilHeatingAppliance = 'OilHeatingAppliance'
    Pump = 'Pump'
    RefrigerantCircuit = 'RefrigerantCircuit'
    SmartEnergyAppliance = 'SmartEnergyAppliance'
    SolarDHWStorage = 'SolarDHWStorage'
    SolarThermalCircuit = 'SolarThermalCircuit'
    SubMeterElectricity = 'SubMeterElectricity'
    TemperatureSensor = 'TemperatureSensor'
    Washer = 'Washer'
    BatterySystem = 'BatterySystem'
    ElectricityGenerationSystem = 'ElectricityGenerationSystem'
    ElectricityStorageSystem = 'ElectricityStorageSystem'
    GridConnectionPointOfPremises = 'GridConnectionPointOfPremises'
    Household = 'Household'
    PVSystem = 'PVSystem'
    EV = 'EV'
    EVSE = 'EVSE'
    ChargingOutlet = 'ChargingOutlet'
    CEM = 'CEM'
    PV = 'PV'
    PVESHybrid = 'PVESHybrid'
    ElectricalStorage = 'ElectricalStorage'
    PVString = 'PVString'
    GridGuard = 'GridGuard'
    ControllableSystem = 'ControllableSystem'


class DeviceTypeEnumType(str, Enum):
    Dishwasher = 'Dishwasher'
    Dryer = 'Dryer'
    EnvironmentSensor = 'EnvironmentSensor'
    Generic = 'Generic'
    HeatGenerationSystem = 'HeatGenerationSystem'
    HeatSinkSystem = 'HeatSinkSystem'
    HeatStorageSystem = 'HeatStorageSystem'
    HVACController = 'HVACController'
    SubMeter = 'SubMeter'
    Washer = 'Washer'
    ElectricitySupplySystem = 'ElectricitySupplySystem'
    EnergyManagementSystem = 'EnergyManagementSystem'
    Inverter = 'Inverter'
    ChargingStation = 'ChargingStation'


class RoleType(str, Enum):
    client = 'client'
    server = 'server'
    special = 'special'


class ScopeTypeEnumType(str, Enum):
    ac = 'ac'
    acCosPhiGrid = 'acCosPhiGrid'
    acCurrentA = 'acCurrentA'
    acCurrentB = 'acCurrentB'
    acCurrentC = 'acCurrentC'
    acFrequencyGrid = 'acFrequencyGrid'
    acPowerA = 'acPowerA'
    acPowerB = 'acPowerB'
    acPowerC = 'acPowerC'
    acPowerLimitPct = 'acPowerLimitPct'
    acPowerTotal = 'acPowerTotal'
    acVoltageA = 'acVoltageA'
    acVoltageB = 'acVoltageB'
    acVoltageC = 'acVoltageC'
    acYieldDay = 'acYieldDay'
    acYieldTotal = 'acYieldTotal'
    dcCurrent = 'dcCurrent'
    dcPower = 'dcPower'
    dcString1 = 'dcString1'
    dcString2 = 'dcString2'
    dcString3 = 'dcString3'
    dcString4 = 'dcString4'
    dcString5 = 'dcString5'
    dcString6 = 'dcString6'
    dcTotal = 'dcTotal'
    dcVoltage = 'dcVoltage'
    dhwTemperature = 'dhwTemperature'
    flowTemperature = 'flowTemperature'
    outsideAirTemperature = 'outsideAirTemperature'
    returnTemperature = 'returnTemperature'
    roomAirTemperature = 'roomAirTemperature'
    charge = 'charge'
    stateOfCharge = 'stateOfCharge'
    discharge = 'discharge'
    gridConsumption = 'gridConsumption'
    gridFeedIn = 'gridFeedIn'
    selfConsumption = 'selfConsumption'
    overloadProtection = 'overloadProtection'
    acPower = 'acPower'
    acEnergy = 'acEnergy'
    acCurrent = 'acCurrent'
    acVoltage = 'acVoltage'
    batteryControl = 'batteryControl'
    simpleIncentiveTable = 'simpleIncentiveTable'
    stateOfHealth = 'stateOfHealth'
    travelRange = 'travelRange'
    nominalEnergyCapacity = 'nominalEnergyCapacity'
    acPowerReal = 'acPowerReal'
    acPowerApparent = 'acPowerApparent'
    acPowerReactive = 'acPowerReactive'
    acYieldMonth = 'acYieldMonth'
    acYieldYear = 'acYieldYear'
    acFrequency = 'acFrequency'
    acCosPhi = 'acCosPhi'
    dcEnergy = 'dcEnergy'
    insulationResistance = 'insulationResistance'
    stateOfEnergy = 'stateOfEnergy'
    useableCapacity = 'useableCapacity'
    dcChargeEnergy = 'dcChargeEnergy'
    dcDischargeEnergy = 'dcDischargeEnergy'
    loadCycleCount = 'loadCycleCount'
    componentTemperature = 'componentTemperature'
    gridLimit = 'gridLimit'
    gridLimitFallback = 'gridLimitFallback'
    acPowerApparentTotal = 'acPowerApparentTotal'
    acPowerReactiveTotal = 'acPowerReactiveTotal'
    acCurrentTotal = 'acCurrentTotal'
    acEnergyConsumed = 'acEnergyConsumed'
    acEnergyProduced = 'acEnergyProduced'
    batteryAcPower = 'batteryAcPower'
    batteryAcPowerPhaseSpecific = 'batteryAcPowerPhaseSpecific'
    batteryDcPower = 'batteryDcPower'
    pccPower = 'pccPower'
    activePowerLimit = 'activePowerLimit'
    activePowerLimitPercentage = 'activePowerLimitPercentage'
    simpleCommittedIncentiveTable = 'simpleCommittedIncentiveTable'
    simplePreliminaryIncentiveTable = 'simplePreliminaryIncentiveTable'
    committedPowerPlan = 'committedPowerPlan'
    preliminaryPowerPlan = 'preliminaryPowerPlan'
    incentiveTableEnConsWithPoETF = 'incentiveTableEnConsWithPoETF'
    incentiveTableEnProdWithPoETF = 'incentiveTableEnProdWithPoETF'
    incentiveTableEnConsWithPoE = 'incentiveTableEnConsWithPoE'
    incentiveTableEnProdWithPoE = 'incentiveTableEnProdWithPoE'
    incentiveTableEnConsWithTF = 'incentiveTableEnConsWithTF'
    incentiveTableEnProdWithTF = 'incentiveTableEnProdWithTF'
    activePowerForecast = 'activePowerForecast'


class CurrencyEnumType(str, Enum):
    AED = 'AED'
    AFN = 'AFN'
    ALL = 'ALL'
    AMD = 'AMD'
    ANG = 'ANG'
    AOA = 'AOA'
    ARS = 'ARS'
    AUD = 'AUD'
    AWG = 'AWG'
    AZN = 'AZN'
    BAM = 'BAM'
    BBD = 'BBD'
    BDT = 'BDT'
    BGN = 'BGN'
    BHD = 'BHD'
    BIF = 'BIF'
    BMD = 'BMD'
    BND = 'BND'
    BOB = 'BOB'
    BOV = 'BOV'
    BRL = 'BRL'
    BSD = 'BSD'
    BTN = 'BTN'
    BWP = 'BWP'
    BYR = 'BYR'
    BZD = 'BZD'
    CAD = 'CAD'
    CDF = 'CDF'
    CHE = 'CHE'
    CHF = 'CHF'
    CHW = 'CHW'
    CLF = 'CLF'
    CLP = 'CLP'
    CNY = 'CNY'
    COP = 'COP'
    COU = 'COU'
    CRC = 'CRC'
    CUC = 'CUC'
    CUP = 'CUP'
    CVE = 'CVE'
    CZK = 'CZK'
    DJF = 'DJF'
    DKK = 'DKK'
    DOP = 'DOP'
    DZD = 'DZD'
    EGP = 'EGP'
    ERN = 'ERN'
    ETB = 'ETB'
    EUR = 'EUR'
    FJD = 'FJD'
    FKP = 'FKP'
    GBP = 'GBP'
    GEL = 'GEL'
    GHS = 'GHS'
    GIP = 'GIP'
    GMD = 'GMD'
    GNF = 'GNF'
    GTQ = 'GTQ'
    GYD = 'GYD'
    HKD = 'HKD'
    HNL = 'HNL'
    HRK = 'HRK'
    HTG = 'HTG'
    HUF = 'HUF'
    IDR = 'IDR'
    ILS = 'ILS'
    INR = 'INR'
    IQD = 'IQD'
    IRR = 'IRR'
    ISK = 'ISK'
    JMD = 'JMD'
    JOD = 'JOD'
    JPY = 'JPY'
    KES = 'KES'
    KGS = 'KGS'
    KHR = 'KHR'
    KMF = 'KMF'
    KPW = 'KPW'
    KRW = 'KRW'
    KWD = 'KWD'
    KYD = 'KYD'
    KZT = 'KZT'
    LAK = 'LAK'
    LBP = 'LBP'
    LKR = 'LKR'
    LRD = 'LRD'
    LSL = 'LSL'
    LYD = 'LYD'
    MAD = 'MAD'
    MDL = 'MDL'
    MGA = 'MGA'
    MKD = 'MKD'
    MMK = 'MMK'
    MNT = 'MNT'
    MOP = 'MOP'
    MRO = 'MRO'
    MUR = 'MUR'
    MVR = 'MVR'
    MWK = 'MWK'
    MXN = 'MXN'
    MXV = 'MXV'
    MYR = 'MYR'
    MZN = 'MZN'
    NAD = 'NAD'
    NGN = 'NGN'
    NIO = 'NIO'
    NOK = 'NOK'
    NPR = 'NPR'
    NZD = 'NZD'
    OMR = 'OMR'
    PAB = 'PAB'
    PEN = 'PEN'
    PGK = 'PGK'
    PHP = 'PHP'
    PKR = 'PKR'
    PLN = 'PLN'
    PYG = 'PYG'
    QAR = 'QAR'
    RON = 'RON'
    RSD = 'RSD'
    RUB = 'RUB'
    RWF = 'RWF'
    SAR = 'SAR'
    SBD = 'SBD'
    SCR = 'SCR'
    SDG = 'SDG'
    SEK = 'SEK'
    SGD = 'SGD'
    SHP = 'SHP'
    SLL = 'SLL'
    SOS = 'SOS'
    SRD = 'SRD'
    SSP = 'SSP'
    STD = 'STD'
    SVC = 'SVC'
    SYP = 'SYP'
    SZL = 'SZL'
    THB = 'THB'
    TJS = 'TJS'
    TMT = 'TMT'
    TND = 'TND'
    TOP = 'TOP'
    TRY = 'TRY'
    TTD = 'TTD'
    TWD = 'TWD'
    TZS = 'TZS'
    UAH = 'UAH'
    UGX = 'UGX'
    USD = 'USD'
    USN = 'USN'
    UYI = 'UYI'
    UYU = 'UYU'
    UZS = 'UZS'
    VEF = 'VEF'
    VND = 'VND'
    VUV = 'VUV'
    WST = 'WST'
    XAF = 'XAF'
    XAG = 'XAG'
    XAU = 'XAU'
    XBA = 'XBA'
    XBB = 'XBB'
    XBC = 'XBC'
    XBD = 'XBD'
    XCD = 'XCD'
    XDR = 'XDR'
    XOF = 'XOF'
    XPD = 'XPD'
    XPF = 'XPF'
    XPT = 'XPT'
    XSU = 'XSU'
    XTS = 'XTS'
    XUA = 'XUA'
    XXX = 'XXX'
    YER = 'YER'
    ZAR = 'ZAR'
    ZMW = 'ZMW'
    ZWL = 'ZWL'


class UnitOfMeasurementEnumType(str, Enum):
    unknown = 'unknown'
    _1 = '1'
    m = 'm'
    kg = 'kg'
    s = 's'
    A = 'A'
    K = 'K'
    mol = 'mol'
    cd = 'cd'
    V = 'V'
    W = 'W'
    Wh = 'Wh'
    VA = 'VA'
    VAh = 'VAh'
    var = 'var'
    varh = 'varh'
    degC = 'degC'
    degF = 'degF'
    Lm = 'Lm'
    lx = 'lx'
    Ohm = 'Ohm'
    Hz = 'Hz'
    dB = 'dB'
    dBm = 'dBm'
    pct = 'pct'
    ppm = 'ppm'
    l = 'l'
    l_s = 'l/s'
    l_h = 'l/h'
    deg = 'deg'
    rad = 'rad'
    rad_s = 'rad/s'
    sr = 'sr'
    Gy = 'Gy'
    Bq = 'Bq'
    Bq_m_3 = 'Bq/m^3'
    Sv = 'Sv'
    Rd = 'Rd'
    C = 'C'
    F = 'F'
    H = 'H'
    J = 'J'
    N = 'N'
    N_m = 'N_m'
    N_s = 'N_s'
    Wb = 'Wb'
    T = 'T'
    Pa = 'Pa'
    bar = 'bar'
    atm = 'atm'
    psi = 'psi'
    mmHg = 'mmHg'
    m_2 = 'm^2'
    m_3 = 'm^3'
    m_3_h = 'm^3/h'
    m_s = 'm/s'
    m_s_2 = 'm/s^2'
    m_3_s = 'm^3/s'
    m_m_3 = 'm/m^3'
    kg_m_3 = 'kg/m^3'
    kg_m = 'kg_m'
    m_2_s = 'm^2/s'
    W_m_K = 'W/m_K'
    J_K = 'J/K'
    _1_s = '1/s'
    W_m_2 = 'W/m^2'
    J_m_2 = 'J/m^2'
    S = 'S'
    S_m = 'S/m'
    K_s = 'K/s'
    Pa_s = 'Pa/s'
    J_kg_K = 'J/kg_K'
    Vs = 'Vs'
    V_m = 'V/m'
    V_Hz = 'V/Hz'
    As = 'As'
    A_m = 'A/m'
    Hz_s = 'Hz/s'
    kg_s = 'kg/s'
    kg_m_2 = 'kg_m^2'
    J_Wh = 'J/Wh'
    W_s = 'W/s'
    ft_3 = 'ft^3'
    ft_3_h = 'ft^3/h'
    ccf = 'ccf'
    ccf_h = 'ccf/h'
    US_liq_gal = 'US.liq.gal'
    US_liq_gal_h = 'US.liq.gal/h'
    Imp_gal = 'Imp.gal'
    Imp_gal_h = 'Imp.gal/h'
    Btu = 'Btu'
    Btu_h = 'Btu/h'
    Ah = 'Ah'
    kg_Wh = 'kg/Wh'


class EnergyModeEnumType(str, Enum):
    consume = 'consume'
    produce = 'produce'
    idle = 'idle'
    auto = 'auto'


class EnergyDirectionEnumType(str, Enum):
    consume = 'consume'
    produce = 'produce'


class CommodityTypeEnumType(str, Enum):
    electricity = 'electricity'
    gas = 'gas'
    oil = 'oil'
    water = 'water'
    wasteWater = 'wasteWater'
    domesticHotWater = 'domesticHotWater'
    heatingWater = 'heatingWater'
    steam = 'steam'
    heat = 'heat'
    coolingLoad = 'coolingLoad'
    air = 'air'


class OccurrenceEnumType(str, Enum):
    first = 'first'
    second = 'second'
    third = 'third'
    fourth = 'fourth'
    last = 'last'


class DayOfWeekType(str, Enum):
    monday = 'monday'
    tuesday = 'tuesday'
    wednesday = 'wednesday'
    thursday = 'thursday'
    friday = 'friday'
    saturday = 'saturday'
    sunday = 'sunday'


class MonthType(str, Enum):
    january = 'january'
    february = 'february'
    march = 'march'
    april = 'april'
    may = 'may'
    june = 'june'
    july = 'july'
    august = 'august'
    september = 'september'
    october = 'october'
    november = 'november'
    december = 'december'


class RecurringIntervalEnumType(str, Enum):
    yearly = 'yearly'
    monthly = 'monthly'
    weekly = 'weekly'
    daily = 'daily'
    hourly = 'hourly'
    everyMinute = 'everyMinute'
    everySecond = 'everySecond'

