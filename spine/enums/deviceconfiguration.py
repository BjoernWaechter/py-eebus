from enum import Enum


class MessageType(bytes, Enum):
    MSG_TYPE_INIT = b'\x00'
    MSG_TYPE_CONTROL = b'\x01'
    MSG_TYPE_DATA = b'\x02'
    MSG_TYPE_END = b'\x03'


class DeviceConfigurationKeyValueTypeType(str, Enum):
    boolean = 'boolean'
    date = 'date'
    dateTime = 'dateTime'
    duration = 'duration'
    string = 'string'
    time = 'time'
    scaledNumber = 'scaledNumber'
    integer = 'integer'


class DeviceConfigurationKeyNameEnumType(str, Enum):
    peakPowerOfPvSystem = 'peakPowerOfPvSystem'
    pvCurtailmentLimitFactor = 'pvCurtailmentLimitFactor'
    asymmetricChargingSupported = 'asymmetricChargingSupported'
    communicationsStandard = 'communicationsStandard'
    inverterGridCode = 'inverterGridCode'
    pvStringAvailabilityStatus = 'pvStringAvailabilityStatus'
    batteryAvailabilityStatus = 'batteryAvailabilityStatus'
    gridConnectionStatus = 'gridConnectionStatus'
    timeToAcChargePowerMax = 'timeToAcChargePowerMax'
    timeToAcDischargePowerMax = 'timeToAcDischargePowerMax'
    tilt = 'tilt'
    azimuth = 'azimuth'
    batteryType = 'batteryType'
    maxCycleCountPerDay = 'maxCycleCountPerDay'
    failsafeConsumptionActivePowerLimit = 'failsafeConsumptionActivePowerLimit'
    failsafeProductionActivePowerLimit = 'failsafeProductionActivePowerLimit'
    failsafePositiveReactivePowerLimit = 'failsafePositiveReactivePowerLimit'
    failsafeNegativeReactivePowerLimit = 'failsafeNegativeReactivePowerLimit'
    failsafePositiveCosPhiLimit = 'failsafePositiveCosPhiLimit'
    failsafeNegativeCosPhiLimit = 'failsafeNegativeCosPhiLimit'
    maxAcChargePower = 'maxAcChargePower'
    maxAcDischargePower = 'maxAcDischargePower'
    maxDcChargePower = 'maxDcChargePower'
    maxDcDischargePower = 'maxDcDischargePower'
    batteryActiveControlMode = 'batteryActiveControlMode'
    defaultAcPower = 'defaultAcPower'
    defaultDcPower = 'defaultDcPower'
    defaultPccPower = 'defaultPccPower'
    failsafeAcPowerSetpoint = 'failsafeAcPowerSetpoint'
    failsafeDcPowerSetpoint = 'failsafeDcPowerSetpoint'
    failsafePccPowerSetpoint = 'failsafePccPowerSetpoint'
    failsafeDurationMinimum = 'failsafeDurationMinimum'
    dischargingBelowTargetEnergyRequestPermitted = 'dischargingBelowTargetEnergyRequestPermitted'
    incentivesSimulationCyclesMax = 'incentivesSimulationCyclesMax'
    incentivesSimulationConcurrent = 'incentivesSimulationConcurrent'
    incentivesTimeoutIncentiveRequest = 'incentivesTimeoutIncentiveRequest'
    incentivesWaitIncentiveWriteable = 'incentivesWaitIncentiveWriteable'

